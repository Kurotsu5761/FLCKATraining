- hosts: cp
  roles:
    - training_package
    - dependencies
    - setup_docker
    - setup_k8s
  tasks:
  - name: "Preparing the machine in networking"
    become: true
    block:
    - name: "Add overlay module"
      community.general.modprobe:
        name: overlay
        state: present
    - name: "Add br_netfilter module"
      community.general.modprobe:
        name: br_netfilter
        state: present
    - name: "Update kernel network"
      ansible.builtin.shell: | 
        cat << EOF | tee /etc/sysctl.d/kubernetes.conf 
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward = 1
        EOF
    - name: "Check changes"
      command: sysctl --system
  - name: "Configure Kubernetes Control Panel"
    become: true
    block:
      - name: "Get host ip"
        ansible.builtin.shell: |
          hostname -i
        register: cp
      - name: "Display ip"
        debug:
          msg: "{{ cp.stdout }}"
      - name: "Update /etc/hosts"
        ansible.builtin.lineinfile:
          path: /etc/hosts
          line: "{{ cp.stdout }} k8scp"
          state: present
      - name: "Copy configuration file from user"
        ansible.builtin.copy:
          remote_src: true
          src: /home/kurox/LFS458/SOLUTIONS/s_03/kubeadm-config.yaml
          dest: /root/
          owner: root
      - name: "Check if k8s already exist"
        stat:
          path: /etc/kubernetes/admin.conf
        register: k8s_admin
      - name: "Initialize kubeadm"
        shell:
          kubeadm init --config kubeadm-config.yaml --upload-certs | tee kubeadm-init.out
        args:
          chdir: /root
        when: k8s_admin.stat.exists == False
  - name: "Create .kube directory"
    ansible.builtin.file:
      path: $HOME/.kube
      state: directory
      owner: kurox
  - name: "Copy Configuration"
    become: true
    ansible.builtin.copy:
      remote_src: true
      src: /etc/kubernetes/admin.conf
      dest: /home/kurox/.kube/config
      owner: kurox
  - name: "Setup CNI"
    kubernetes.core.k8s:
      state: present
      src: /home/kurox/LFS458/SOLUTIONS/s_03/cilium-cni.yaml
  - name: "Get Join command"
    become: true
    shell:
      kubeadm token create --print-join-command
    register: join_command

- hosts: workers
  roles:
    - dependencies
    - setup_docker
    - setup_k8s
  tasks:
    - name: "Print join_command"
      debug:
        msg: "{{join_command.stdout }}"

