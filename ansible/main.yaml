- hosts: cp
  roles:
    - training_package
    - dependencies
    - setup_docker
    - setup_k8s
  tasks:
  - name: "Configure Kubernetes Control Panel"
    become: true
    block:
      - name: "Get host ip"
        ansible.builtin.shell: |
          hostname -i
        register: cp_ip
      - name: "Display ip"
        debug:
          msg: "{{ cp_ip.stdout }}"
      - name: "Update /etc/hosts"
        ansible.builtin.lineinfile:
          path: /etc/hosts
          line: "{{ cp_ip.stdout }} k8scp"
          state: present
      - name: "Copy configuration file from user"
        ansible.builtin.copy:
          remote_src: true
          src: /home/kurox/LFS458/SOLUTIONS/s_03/kubeadm-config.yaml
          dest: /root/
          owner: root
      - name: "Check if k8s already exist"
        stat:
          path: /etc/kubernetes/admin.conf
        register: k8s_admin
      - name: "Initialize kubeadm"
        shell:
          kubeadm init --config kubeadm-config.yaml --upload-certs | tee kubeadm-init.out
        args:
          chdir: /root
        when: k8s_admin.stat.exists == False
  - name: "Create .kube directory"
    ansible.builtin.file:
      path: $HOME/.kube
      state: directory
      owner: kurox
  - name: "Copy Configuration"
    become: true
    ansible.builtin.copy:
      remote_src: true
      src: /etc/kubernetes/admin.conf
      dest: /home/kurox/.kube/config
      owner: kurox
  - name: "Setup CNI"
    kubernetes.core.k8s:
      state: present
      src: https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
  - name: "Get Join command"
    become: true
    shell:
      kubeadm token create --print-join-command
    register: join_command
  - name: "Add dummy host for variable passing"
    add_host:
      name: "k8s_cp"
      join_command: "{{ join_command }}"
      cp_ip: "{{ cp_ip }}"

- hosts: workers
  vars:
    join_command: "{{hostvars.k8s_cp.join_command.stdout}}"
    cp_ip: "{{hostvars.k8s_cp.cp_ip.stdout}}"
  roles:
    - dependencies
    - setup_docker
    - setup_k8s
  tasks:
    # - name: "Print join_command"
    #   debug:
    #     msg: "{{hostvars.k8s_cp.join_command.stdout}}"
    #   when: hostvars.k8s_cp.join_command is defined
    - name: "Update /etc/hosts"
      become: true
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ cp_ip }} k8scp"
        state: present
    - name: "Check if kubelet installed"
      stat: 
        path: /etc/kubernetes/kubelet.conf
      register: kubelet_conf
    - name: "Join k8s cluster"
      become: true
      shell:
        "{{join_command}}"
      when: kubelet_conf.stat.exists == False
